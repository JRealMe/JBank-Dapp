{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_useState","useState","_useState2","slicedToArray","isWalletConnected","setIsWalletConnected","_useState3","_useState4","isBankerOwner","setIsBankerOwner","_useState5","withdraw","deposit","bankName","_useState6","inputValue","setInputValue","_useState7","_useState8","bankOwnerAddress","setBankOwnerAddress","_useState9","_useState10","customerTotalBalance","setCustomerTotalBalance","_useState11","_useState12","currentBankName","setCurrentBankName","_useState13","_useState14","customerAddress","setCustomerAddress","_useState15","_useState16","setError","contractAddress","contractABI","abi","checkIfWalletIsConnected","_ref","asyncToGenerator","_callee","accounts","account","_context","window","ethereum","request","console","log","t0","apply","arguments","getBankName","_ref2","_callee2","provider","signer","bankContract","_context2","ethers","providers","Web3Provider","getSigner","Contract","utils","parseBytes32String","toString","setBankNameHandler","_ref3","_callee3","event","txn","_context3","preventDefault","setBankName","formatBytes32String","wait","hash","_x","getbankOwnerHandler","_ref4","_callee4","owner","_yield$window$ethereu","_yield$window$ethereu2","_context4","bankOwner","toLowerCase","customerBalanceHandler","_ref5","_callee5","balance","_context5","getCustomerBalance","formatEther","handleInputChange","prevFormData","objectSpread","target","deposityMoneyHandler","_ref6","_callee6","_context6","depositMoney","parseEther","_x2","withDrawMoneyHandler","_ref7","_callee7","myAddress","_context7","getAddress","withDrawMoney","_x3","useEffect","react_default","a","createElement","className","onChange","placeholder","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ea59eeaf.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ethers, utils } from \"ethers\";\nimport abi from \"./contracts/Bank.json\";\n\nfunction App() {\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const [isBankerOwner, setIsBankerOwner] = useState(false);\n  const [inputValue, setInputValue] = useState({ withdraw: \"\", deposit: \"\", bankName: \"\" });\n  const [bankOwnerAddress, setBankOwnerAddress] = useState(null);\n  const [customerTotalBalance, setCustomerTotalBalance] = useState(null);\n  const [currentBankName, setCurrentBankName] = useState(null);\n  const [customerAddress, setCustomerAddress] = useState(null);\n  const [error, setError] = useState(null);\n\n  const contractAddress = '0x0561c4B7781a2323fB6289E1eA0699674cA7a1dC';\n  const contractABI = abi.abi;\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n        const account = accounts[0];\n        setIsWalletConnected(true);\n        setCustomerAddress(account);\n        console.log(\"Account Connected: \", account);\n      } else {\n        setError(\"Please install a MetaMask wallet to use our bank.\");\n        console.log(\"No Metamask detected\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const getBankName = async () => {\n    try {\n      if (window.ethereum) {\n\n        //read data\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const bankContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        let bankName = await bankContract.bankName();\n        bankName = utils.parseBytes32String(bankName);\n        setCurrentBankName(bankName.toString());\n      } else {\n        console.log(\"Ethereum object not found, install Metamask.\");\n        setError(\"Please install a MetaMask wallet to use our bank.\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const setBankNameHandler = async (event) => {\n    event.preventDefault();\n    try {\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const bankContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        const txn = await bankContract.setBankName(utils.formatBytes32String(inputValue.bankName));\n        console.log(\"Setting Bank Name...\");\n        await txn.wait();\n        console.log(\"Bank Name Changed\", txn.hash);\n        getBankName();\n\n      } else {\n        console.log(\"Ethereum object not found, install Metamask.\");\n        setError(\"Please install a MetaMask wallet to use our bank.\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getbankOwnerHandler = async () => {\n    try {\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const bankContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        let owner = await bankContract.bankOwner();\n        setBankOwnerAddress(owner);\n\n        const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n        if (owner.toLowerCase() === account.toLowerCase()) {\n          setIsBankerOwner(true);\n        }\n      } else {\n        console.log(\"Ethereum object not found, install Metamask.\");\n        setError(\"Please install a MetaMask wallet to use our bank.\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const customerBalanceHandler = async () => {\n    try {\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const bankContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        let balance = await bankContract.getCustomerBalance();\n        setCustomerTotalBalance(utils.formatEther(balance));\n        console.log(\"Retrieved balance...\", balance);\n\n      } else {\n        console.log(\"Ethereum object not found, install Metamask.\");\n        setError(\"Please install a MetaMask wallet to use our bank.\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleInputChange = (event) => {\n    setInputValue(prevFormData => ({ ...prevFormData, [event.target.name]: event.target.value }));\n  }\n\n  const deposityMoneyHandler = async (event) => {\n    try {\n      event.preventDefault();\n      if (window.ethereum) {\n        //write data\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const bankContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        const txn = await bankContract.depositMoney({ value: ethers.utils.parseEther(inputValue.deposit) });\n        console.log(\"Deposting money...\");\n        await txn.wait();\n        console.log(\"Deposited money...done\", txn.hash);\n\n        customerBalanceHandler();\n\n      } else {\n        console.log(\"Ethereum object not found, install Metamask.\");\n        setError(\"Please install a MetaMask wallet to use our bank.\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const withDrawMoneyHandler = async (event) => {\n    try {\n      event.preventDefault();\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const bankContract = new ethers.Contract(contractAddress, contractABI, signer);\n\n        let myAddress = await signer.getAddress()\n        console.log(\"provider signer...\", myAddress);\n\n        const txn = await bankContract.withDrawMoney(myAddress, ethers.utils.parseEther(inputValue.withdraw));\n        console.log(\"Withdrawing money...\");\n        await txn.wait();\n        console.log(\"Money with drew...done\", txn.hash);\n\n        customerBalanceHandler();\n\n      } else {\n        console.log(\"Ethereum object not found, install Metamask.\");\n        setError(\"Please install a MetaMask wallet to use our bank.\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    getBankName();\n    getbankOwnerHandler();\n    customerBalanceHandler()\n  }, [isWalletConnected])\n\n  return (\n    <main className=\"main-container\">\n      <h2 className=\"headline\"><span className=\"headline-gradient\">Bank Contract Project</span> 💰</h2>\n      <section className=\"customer-section px-10 pt-5 pb-10\">\n        {error && <p className=\"text-2xl text-red-700\">{error}</p>}\n        <div className=\"mt-5\">\n          {currentBankName === \"\" && isBankerOwner ?\n            <p>\"Setup the name of your bank.\" </p> :\n            <p className=\"text-3xl font-bold\">{currentBankName}</p>\n          }\n        </div>\n        <div className=\"mt-7 mb-9\">\n          <form className=\"form-style\">\n            <input\n              type=\"text\"\n              className=\"input-style\"\n              onChange={handleInputChange}\n              name=\"deposit\"\n              placeholder=\"0.0000 ETH\"\n              value={inputValue.deposit}\n            />\n            <button\n              className=\"btn-purple\"\n              onClick={deposityMoneyHandler}>Deposit Money In ETH</button>\n          </form>\n        </div>\n        <div className=\"mt-10 mb-10\">\n          <form className=\"form-style\">\n            <input\n              type=\"text\"\n              className=\"input-style\"\n              onChange={handleInputChange}\n              name=\"withdraw\"\n              placeholder=\"0.0000 ETH\"\n              value={inputValue.withdraw}\n            />\n            <button\n              className=\"btn-purple\"\n              onClick={withDrawMoneyHandler}>\n              Withdraw Money In ETH\n            </button>\n          </form>\n        </div>\n        <div className=\"mt-5\">\n          <p><span className=\"font-bold\">Customer Balance: </span>{customerTotalBalance}</p>\n        </div>\n        <div className=\"mt-5\">\n          <p><span className=\"font-bold\">Bank Owner Address: </span>{bankOwnerAddress}</p>\n        </div>\n        <div className=\"mt-5\">\n          {isWalletConnected && <p><span className=\"font-bold\">Your Wallet Address: </span>{customerAddress}</p>}\n          <button className=\"btn-connect\" onClick={checkIfWalletIsConnected}>\n            {isWalletConnected ? \"Wallet Connected 🔒\" : \"Connect Wallet 🔑\"}\n          </button>\n        </div>\n      </section>\n      {\n        isBankerOwner && (\n          <section className=\"bank-owner-section\">\n            <h2 className=\"text-xl border-b-2 border-indigo-500 px-10 py-4 font-bold\">Bank Admin Panel</h2>\n            <div className=\"p-10\">\n              <form className=\"form-style\">\n                <input\n                  type=\"text\"\n                  className=\"input-style\"\n                  onChange={handleInputChange}\n                  name=\"bankName\"\n                  placeholder=\"Enter a Name for Your Bank\"\n                  value={inputValue.bankName}\n                />\n                <button\n                  className=\"btn-grey\"\n                  onClick={setBankNameHandler}>\n                  Set Bank Name\n                </button>\n              </form>\n            </div>\n          </section>\n        )\n      }\n    </main>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}